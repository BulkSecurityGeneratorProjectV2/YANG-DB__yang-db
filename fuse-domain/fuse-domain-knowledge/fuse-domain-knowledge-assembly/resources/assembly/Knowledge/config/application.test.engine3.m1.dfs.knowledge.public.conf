application.env = engine2.m1.test
application.host = 0.0.0.0
application.port = 8888
application.profile = activeProfile

server.http.HeaderSize = 8k
# Max response buffer size
server.http.ResponseBufferSize = 10m
# Max request body size to keep in memory
server.http.RequestBufferSize = 10m
# Max request size total (body + header)
server.http.MaxRequestSize = 10m

modules.activeProfile = [
  "com.yangdb.fuse.services.modules.ServiceModule",
  "com.yangdb.fuse.services.modules.LoggingJacksonModule",
  "com.yangdb.fuse.dispatcher.modules.CoreDispatcherModule",
  "com.yangdb.fuse.dispatcher.query.graphql.GraphQLModule",
"com.yangdb.fuse.dispatcher.query.rdf.SparqlModule",
"com.yangdb.fuse.dispatcher.query.sql.SqlModule",
  "com.yangdb.fuse.dispatcher.modules.DescriptorsModule",
  "com.yangdb.fuse.asg.translator.graphql.AsgGraphQLModule",
  "com.yangdb.fuse.asg.translator.cypher.AsgCypherModule",
  "com.yangdb.fuse.asg.translator.sparql.AsgSparqlModule",
  "com.yangdb.fuse.asg.M2AsgModule",
  "com.yangdb.fuse.epb.plan.modules.EpbDfsCountBasedRedundantModule"
  "com.yangdb.fuse.asg.AsgValidationModule",
  "com.yangdb.fuse.gta.module.GtaModule",
  "com.yangdb.fuse.executor.ExecutorModule",
  "com.yangdb.fuse.executor.modules.discrete.CursorsModule",
  "com.yangdb.fuse.assembly.knowledge.KnowledgeModule",
]
epb.cost.alpha = 1
epb.cost.delta = 1

elasticsearch.embedded = true
elasticsearch.delete_data_on_load = false
elasticsearch.hosts = [ "localhost" ]
elasticsearch.port = 9300
elasticsearch.cluster_name = knowledge
elasticsearch.default_search_size = 10000000
elasticsearch.max_search_size = 1000000000
elasticsearch.scroll_size = 10000
elasticsearch.scroll_time = 600000
elasticsearch.search.max_open_scroll_context = 1000

unipop.bulk.max = 1000
unipop.bulk.start = 1000
unipop.bulk.multiplier = 1

assembly = Knowledge

Knowledge.physical_raw_schema = com.yangdb.fuse.assembly.knowledge.KnowledgeRawSchemaShort
Knowledge.physical_schema_initiator = com.yangdb.fuse.assembly.knowledge.KnowledgeGraphInitiator

Knowledge.physical_schema_data_loader = com.yangdb.fuse.assembly.knowledge.KnowledgeDataLoader
Knowledge.physical_schema_csv_data_loader = com.yangdb.fuse.assembly.knowledge.KnowledgeCSVDataLoader

Knowledge.search_order_provider = com.yangdb.fuse.assembly.knowledge.KnowledgeLightSearchOrderProvider
Knowledge.physical_schema_provider_factory_class = com.yangdb.fuse.assembly.knowledge.KnowledgeRoutedSchemaProviderFactory
Knowledge.stats_provider_class = com.yangdb.fuse.assembly.knowledge.KnowledgeStaticRuleBasedStatisticalProvider
Knowledge.plan_extension_strategy_class = com.yangdb.fuse.assembly.knowledge.KnowledgeM2DfsRedundantPlanExtensionStrategy
Knowledge.asg_strategy_registrar = com.yangdb.fuse.assembly.knowledge.asg.KnowledgeM2AsgStrategyRegistrar
Knowledge.asg_validator_strategy_registrar = com.yangdb.fuse.assembly.knowledge.asg.AsgKnowledgeValidatorStrategyRegistrar
Knowledge.idGenerator_indexName = .idgenerator
Knowledge.business_type_provider_dir = ontology

Knowledge.unigraph_provider = com.yangdb.fuse.executor.ontology.discrete.M1ElasticUniGraphProvider
Knowledge.cursor_factory = com.yangdb.fuse.assembly.knowledge.cursor.KnowledgeTraversalCursorFactory

fuse.node_status_reporter = com.yangdb.fuse.executor.resource.PersistantNodeStatusResource
fuse.plan_traversal_translator_class = com.yangdb.fuse.gta.translation.discrete.M1PlanTraversalTranslator
fuse.ontology_provider_dir = ontology
fuse.cursor.timeout = 18000000

fuse.id_bulk=10000000
fuse.id_format="%08d"
fuse.indices_count=10
