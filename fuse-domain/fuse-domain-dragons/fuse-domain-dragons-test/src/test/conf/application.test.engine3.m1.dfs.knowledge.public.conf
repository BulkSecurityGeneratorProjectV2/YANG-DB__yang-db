application.env = engine2.m1.test
application.host = 0.0.0.0
application.port = 8888
application.profile = activeProfile

modules.activeProfile = [
  "com.yangdb.fuse.services.modules.ServiceModule",
  "com.yangdb.fuse.dispatcher.modules.NewDispatcherModule",
  "com.yangdb.fuse.dispatcher.modules.DescriptorsModule",
  "com.yangdb.fuse.asg.M2AsgModule",
  "com.yangdb.fuse.asg.AsgValidationModule",
  "com.yangdb.fuse.epb.plan.modules.EpbDfsRuleBasedRedundantModule",
  "com.yangdb.fuse.gta.module.GtaModule",
  "com.yangdb.fuse.executor.ExecutorModule",
  "com.yangdb.fuse.assembly.knowlegde.KnowledgeModule",
  "com.yangdb.fuse.executor.modules.discrete.CursorsModule"
]
epb.cost.alpha = 1
epb.cost.delta = 1

elasticsearch.hosts = [ "localhost" ]
elasticsearch.port = 9300
elasticsearch.cluster_name = knowledge
elasticsearch.default_search_size = 1000000000
elasticsearch.max_search_size = 1000000000
elasticsearch.scroll_size = 1000
elasticsearch.scroll_time = 60000

unipop.bulk.max = 1000
unipop.bulk.start = 1000
unipop.bulk.multiplier = 1

assembly = Knowledge
Knowledge.physical_raw_schema = com.yangdb.fuse.assembly.knowlegde.KnowledgeRawSchemaShort
Knowledge.physical_schema_data_loader = com.yangdb.fuse.executor.ontology.schema.VoidGraphDataLoader
Knowledge.physical_schema_provider_factory_class = com.yangdb.fuse.assembly.knowlegde.KnowledgeRoutedSchemaProviderFactory
Knowledge.stats_provider_class = com.yangdb.fuse.assembly.knowlegde.KnowledgeStaticRuleBasedStatisticalProvider
Knowledge.plan_extension_strategy_class = com.yangdb.fuse.assembly.knowlegde.KnowledgeM1DfsRedundantPlanExtensionStrategy
Knowledge.idGenerator_indexName = .idgenerator

Knowledge.unigraph_provider = com.yangdb.fuse.executor.ontology.discrete.M1ElasticUniGraphProvider

fuse.node_status_reporter = com.yangdb.fuse.executor.resource.PersistantNodeStatusResource
fuse.plan_traversal_translator_class = com.yangdb.fuse.gta.translation.discrete.M1PlanTraversalTranslator
fuse.ontology_provider_dir = ontology
fuse.cursor.timeout = 18000